package polymorphism;


// [1] 다형성이란?
// 다양한 형태 또는 특성 <다. 형. 성>
// 자바와 같은 객체 지향 언어에서의 의미는 부모 클래스를 상속받은 자식 클래스의 인스턴스가 부모의 객페로도 사용되고
// 뿐만 아니라 자식 클래스의 객체로도 사용될 수 있는 다야아한 상황을 의미한다.

// [2] 예시
// 부모 클래스에 Bird가 있고 이를 상속받은 자식클래스에는 Parrot가 있다고 가정하자
// 이때 "앵무새가 말을하네.. 허허" 이렇게 말하는 거와
// "새가 말을하네 .. 허허" 라고 말 할 수 있다.
// Perons s1 = new Student();

// [3] 결론
// 정리하자면, 하위클래스의 인스턴스(객체)는 보다 위인 상위클래스의 인스턴스(객체)로도 사용될 수 있다.
// 그런데 그 반대는 안된다.
// 왜냐하면 "앵무새"는 분명 그 상위인 "새"라고 말할 수 있지만 새는 종류가 많아서 모든 새는 앵무새가 아니다.
// 따라서 상위 클래스의 인스턴스(객체)는 하위 (자식)클래스의 인스턴스로 사용될 수 없다.


class Person{

}

class Student extends Person{

}

public class PolymophismEx {
    public static void main(String[] args) {
        //객체생성
        Student s1 = new Student(); //정상

        // 객체생성 --> 부모타입으로 생성
        Person s2 = new Student(); //정상
        Person p1 = new Person(); //정상

        // 객체생성 --> 상위 클래스로 객체를 생성하면서 타입은 하위 타입을 쓰면 안된다.
        // Student s3 = new Person(); 반대는 안된디/

    }
}
